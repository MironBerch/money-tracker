version: '3.8'

services:
  server:
    restart: always
    build: .
    command: >
      sh -c "cd /app/money_tracker/
      && python manage.py migrate --noinput
      && python manage.py runserver 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - ${ENV}
    depends_on:
      - db
      - redis
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - ${ENV}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
        - postgres_volume:/var/lib/postgresql/data/
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: always
    env_file:
      - ${ENV}
    ports:
      - "6380:6379"
    networks:
      - app-network

  celery:
    restart: always
    env_file:
      - ${ENV}
    build: .
    volumes:
      - .:/app
    command: >
      sh -c "cd /app/money_tracker/
      && celery -A config worker -l info"
    links:
      - redis
    depends_on:
      - redis
      - server
    networks:
      - app-network

  bot:
    restart: always
    build: .
    command: >
      sh -c "cd /app/bot/
      && python __main__.py"
    env_file:
      - ${ENV}
    depends_on:
      - server
      - db
      - redis
    networks:
      - app-network

volumes:
  postgres_volume:


networks:
  app-network: